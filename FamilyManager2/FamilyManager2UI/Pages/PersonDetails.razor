@page "/Person/{id:int}/{Firstname}/{Lastname}"
@using Models
@using FamilyManager2UI.WebClient
@inject NavigationManager navigationManager;
@inject IRestClient restClient;

@if (person != null) {
    <div class="container mt-6 mb-6 p-6 my-auto h-100 w-50">
        <div class="card p-4">
            <div class=" image d-flex flex-column justify-content-center align-items-center">
                <div class="d-flex flex-row justify-content-center mt-3">
                    @if (person.Sex.Equals("F")) {
                        <button class="btn btn-secondary mt-3">
                            <img src="/Images/girl.jpg" height="100" width="100"/><br/>
                        </button>
                    }
                    else {
                        <button class="btn btn-secondary mt-3">
                            <img src="/Images/boy.png" height="100" width="100"/><br/>
                        </button>
                    }
                </div>
                <div>
                    <span class="mt-3">@person.FirstName @person.LastName</span>
                </div>
                <div>
                    <span class="mt-3">Age: @person.Age</span>
                </div>
                <div class="d-flex flex-row justify-content-center align-items-center mt-3">
                    <span class="idd1">Height: @person.Height</span>
                </div>
                <div class="d-flex flex-row justify-content-center align-items-center mt-3">
                    <span class="idd1">Weight: @person.Weight</span>
                </div>
                <div class="d-flex flex-row justify-content-center align-items-center mt-3 w-25">
                    Sex:
                    <label> @person.Sex</label>
                </div>
                <div class="text mt-3">
                    <span>Eye Color: @person.EyeColor</span>
                </div>
                <div class="px-2 rounded mt-3">
                    <span class="join">Hair Color: @person.HairColor</span>
                </div>
                @if (person is Adult) {
                    Adult adult = (Adult) person;
                    <div class="px-2 rounded mt-3">
                        <span>Job title: @adult.Job.JobTitle</span>
                    </div>
                }
                @if (person is Child) {
                    Child child = (Child) person;
                    @if (child.Pets.Count != 0) {
                        <div class="px-2 rounded mt-3">
                            Pets:
                            @foreach (var pet in child.Pets) {
                                <span>@pet.Name</span>
                            }
                        </div>
                    }
                    <div class="px-2 rounded mt-3">
                        Interests:
                        @foreach (var interest in child.Interests) {
                            <div class="px-2 rounded mt-3">
                                <span>@interest.Type</span>
                            </div>
                            <div class="px-2 rounded mt-3">
                                <span>@interest.Description</span>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { set; get; }
    [Parameter]
    public string Firstname { set; get; }
    [Parameter]
    public string Lastname { set; get; }
    
    public string FirstLastName { get; set; }

    private Person person;

    protected override async Task OnInitializedAsync() {
        person = await restClient.GetPerson(Id, Firstname, Lastname);
        FirstLastName = $"{Firstname} {Lastname}";
    }
    
}